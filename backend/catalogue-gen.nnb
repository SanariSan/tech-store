{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "import { randomInt, randomBytes } from 'node:crypto';\nimport { appendFileSync } from 'fs';\n\nconst categories = ['laptops', 'phones', 'accessories'] as const;\nconst brands = ['Sausunk', 'Banaple', 'Leonowa'] as const;\nconst subCategories = {\n    laptops: ['gaming', 'work', 'chill'],\n    phones: ['hi-tech', 'goofy', 'boomer'],\n    accessories: ['charger', 'headphones'],\n} as const;\n\ntype TCategories = typeof categories;\ntype TSubCategories = typeof subCategories;\n\nconst items: {\n    id: string,\n    name: string,\n    price: number,\n    category: TCategories[keyof TCategories];\n    subCategory: TSubCategories[keyof TSubCategories][keyof TSubCategories[keyof TSubCategories]];\n    lsrc: string,\n    hsrc: string,\n}[] = [];\n\nfunction rndIntInRange(min = 0, max: number = min + 1) {\n    return randomInt(min, max);\n}\n  \nfunction randomHexSync(length = 16) {\n    return randomBytes(length).toString('hex').slice(0, length);\n}\n\n// laptops\nfor (let i = 0; i < 75; i += 1) {\n    const category = categories[0];\n    const subCategory = subCategories[category][rndIntInRange(0, subCategories[category].length)];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(rndIntInRange(2, 5))}`;\n\n    const assetNum = rndIntInRange(1, 15 + 1);\n    const lsrc = `/api/v1/goods/assets/l/l${assetNum}.jpg`;\n    const hsrc = `/api/v1/goods/assets/h/l${assetNum}.jpg`;\n    \n    const price = rndIntInRange(20000, 70000);\n    const id = randomHexSync(16);\n\n    const item = {\n        id, name, price, category, subCategory, lsrc, hsrc\n    };\n\n    items.push(item);\n}\n\n// phones\nfor (let i = 0; i < 75; i += 1) {\n    const category = categories[1];\n    const subCategory = subCategories[category][rndIntInRange(0, subCategories[category].length)];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(rndIntInRange(2, 5))}`;\n\n    const assetNum = rndIntInRange(1, 15 + 1);\n    const lsrc = `/api/v1/goods/assets/l/p${assetNum}.jpg`;\n    const hsrc = `/api/v1/goods/assets/h/p${assetNum}.jpg`;\n    \n    const price = rndIntInRange(10000, 40000);\n    const id = randomHexSync(16);\n\n    const item = {\n        id, name, price, category, subCategory, lsrc, hsrc\n    };\n\n    items.push(item);\n}\n\n// chargers\nfor (let i = 0; i < 30; i += 1) {\n    const category = categories[2];\n    const subCategory = subCategories[category][0];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(rndIntInRange(2, 5))}`;\n\n    const assetNum = rndIntInRange(1, 10 + 1);\n    const lsrc = `/api/v1/goods/assets/l/ch${assetNum}.jpg`;\n    const hsrc = `/api/v1/goods/assets/h/ch${assetNum}.jpg`;\n    \n    const price = rndIntInRange(700, 3000);\n    const id = randomHexSync(16);\n\n    const item = {\n        id, name, price, category, subCategory, lsrc, hsrc\n    };\n\n    items.push(item);\n}\n\n// headphones\nfor (let i = 0; i < 30; i += 1) {\n    const category = categories[2];\n    const subCategory = subCategories[category][1];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(rndIntInRange(2, 5))}`;\n\n    const assetNum = rndIntInRange(1, 10 + 1);\n    const lsrc = `/api/v1/goods/assets/l/h${assetNum}.jpg`;\n    const hsrc = `/api/v1/goods/assets/h/h${assetNum}.jpg`;\n    \n    const price = rndIntInRange(2500, 12000);\n    const id = randomHexSync(16);\n\n    const item = {\n        id, name, price, category, subCategory, lsrc, hsrc\n    };\n\n    items.push(item);\n}\n\nappendFileSync(\"./catalogue.json\", `${JSON.stringify(items, undefined, 2)}`);\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}