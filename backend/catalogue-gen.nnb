{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "import { randomInt, randomBytes } from 'node:crypto';\nimport { appendFileSync } from 'fs';\n\nconst categories = ['laptops', 'phones', 'accessories'] as const;\nconst brands = ['Sausunk', 'Banaple', 'Leonowa'] as const;\nconst modifiers = {\n  laptops: ['gaming', 'work', 'chill'],\n  phones: ['hi-tech', 'goofy', 'boomer'],\n  accessories: ['charger', 'headphones'],\n} as const;\n\ntype TCategories = typeof categories;\ntype TModifiers = typeof modifiers;\n\nconst items: {\n  id: string;\n  name: string;\n  price: number;\n  category: TCategories[keyof TCategories];\n  modifier: TModifiers[keyof TModifiers][keyof TModifiers[keyof TModifiers]];\n  lsrc: string;\n  hsrc: string;\n}[] = [];\n\nfunction rndIntInRange(min = 0, max: number = min + 1) {\n  return randomInt(min, max);\n}\n\nfunction randomHexSync(length = 16) {\n  return randomBytes(length).toString('hex').slice(0, length);\n}\n\nfunction genLaptop() {\n  const category = categories[0];\n  const modifier = modifiers[category][rndIntInRange(0, modifiers[category].length)];\n  const brand = brands[rndIntInRange(0, brands.length)];\n  const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(\n    rndIntInRange(2, 5),\n  )}`;\n\n  const assetNum = rndIntInRange(1, 20 + 1);\n  const lsrc = `/assets/l/l${assetNum}.webp`;\n  const hsrc = `/assets/h/l${assetNum}.webp`;\n\n  const price = rndIntInRange(1000, 3000);\n  const id = randomHexSync(16);\n\n  const item = {\n    id,\n    name,\n    price,\n    category,\n    modifier,\n    lsrc,\n    hsrc,\n  };\n\n  return item;\n}\n\nfunction genPhone() {\n  const category = categories[1];\n    const modifier = modifiers[category][rndIntInRange(0, modifiers[category].length)];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(\n      rndIntInRange(2, 5),\n    )}`;\n\n    const assetNum = rndIntInRange(1, 20 + 1);\n    const lsrc = `/assets/l/p${assetNum}.webp`;\n    const hsrc = `/assets/h/p${assetNum}.webp`;\n\n    const price = rndIntInRange(400, 2000);\n    const id = randomHexSync(16);\n\n    const item = {\n      id,\n      name,\n      price,\n      category,\n      modifier,\n      lsrc,\n      hsrc,\n    };\n  \n  return item;\n}\n\nfunction genCharger() {\n  const category = categories[2];\n    const modifier = modifiers[category][0];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(\n      rndIntInRange(2, 5),\n    )}`;\n\n    const assetNum = rndIntInRange(1, 20 + 1);\n    const lsrc = `/assets/l/ch${assetNum}.webp`;\n    const hsrc = `/assets/h/ch${assetNum}.webp`;\n\n    const price = rndIntInRange(10, 200);\n    const id = randomHexSync(16);\n\n    const item = {\n      id,\n      name,\n      price,\n      category,\n      modifier,\n      lsrc,\n      hsrc,\n    };\n  \n  return item;\n}\n\nfunction genHeadpones() {\n  const category = categories[2];\n    const modifier = modifiers[category][1];\n    const brand = brands[rndIntInRange(0, brands.length)];\n    const name = `${brand} ${randomHexSync(rndIntInRange(2, 5))}-${randomHexSync(\n      rndIntInRange(2, 5),\n    )}`;\n\n    const assetNum = rndIntInRange(1, 20 + 1);\n    const lsrc = `/assets/l/h${assetNum}.webp`;\n    const hsrc = `/assets/h/h${assetNum}.webp`;\n\n    const price = rndIntInRange(50, 400);\n    const id = randomHexSync(16);\n\n    const item = {\n      id,\n      name,\n      price,\n      category,\n      modifier,\n      lsrc,\n      hsrc,\n    };\n  \n  return item;\n}\n\n\nfunction generateChunk() {\n  for (let i = 0; i < 100; i += 1) {\n    items.push(genLaptop(), genPhone(), genCharger(), genHeadpones());\n  }\n}\n\nfor (let i = 0; i < 40; i += 1) generateChunk();\n\nappendFileSync('./catalogue.json', `${JSON.stringify(items, undefined, 2)}`);\n"
            ],
            "outputs": []
        }
    ]
}